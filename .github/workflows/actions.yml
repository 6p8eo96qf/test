name: StartServer

on:
  repository_dispatch:
  workflow_dispatch:
  
concurrency: 
  group: jellyfin
  cancel-in-progress: true
    
jobs:
  StartServer:
    runs-on: ubuntu-latest
    name: JellyfinServer
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
      - name: rclone Install
        run: |
          pwd
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
      - name: rclone Config
        run: |
          cat >  ~/.config/rclone/rclone.conf  << EOF
          ${{ secrets.RCLONE_CONFIG }}
          EOF
      - name: Jellyfin Install
        run: |
          sudo mkdir -p /home/runner/mount
          sudo rclone mount Media:/ /home/runner/mount/  --daemon --allow-other --cache-db-purge --buffer-size 32M --use-mmap --dir-cache-time 4h --drive-chunk-size 16M --timeout 1h --vfs-cache-mode minimal --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1G --fast-list
          sudo apt install apt-transport-https
          wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -
          echo "deb [arch=$( dpkg --print-architecture )] https://repo.jellyfin.org/$( awk -F'=' '/^ID=/{ print $NF }' /etc/os-release ) $( awk -F'=' '/^VERSION_CODENAME=/{ print $NF }' /etc/os-release ) main" | sudo tee /etc/apt/sources.list.d/jellyfin.list
          sudo apt update
          sudo apt install jellyfin
          sudo systemctl stop jellyfin
          ls /etc/default/jellyfin
          cat /etc/default/jellyfin
          mkdir cloudflare
          cd cloudflare
          wget https://github.com/cryptbphcoutlook/test123/raw/main/cloudflare/cloudflared-stable-linux-amd64.deb
          sudo dpkg -i cloudflared-stable-linux-amd64.deb
          cd ..
          #cd ~/
          #mkdir .cloudflared
          #cd .cloudflared
          #cat << EOF >> cert.pem
          #${{ secrets.CF_CERT }}
          #EOF
          #cd ..
          #sudo rm /usr/lib/systemd/system/jellyfin.service
          #sudo cp  /home/runner/work/test/test/jellyfin.service /usr/lib/systemd/system/
          #sudo systemctl daemon-reload
          #sudo systemctl start jellyfin
          sudo /usr/bin/jellyfin --service --configdir="/home/runner/mount/Jellyfin Settings/Config/" --datadir="/home/runner/mount/Jellyfin Settings/Data/" --webdir="/usr/share/jellyfin/web" --restartpath="/usr/lib/jellyfin/restart.sh" --ffmpeg="/usr/lib/jellyfin-ffmpeg/ffmpeg" & timeout 345m cloudflared --url localhost:8096  || ( [[ $? -eq 124 ]] && \echo "WARNING: Timeout reached for Jellyfin, but that's OK" )
